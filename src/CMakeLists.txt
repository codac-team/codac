# ==================================================================
#  Codac - cmake configuration file
# ==================================================================

add_subdirectory(core)
add_subdirectory(graphics)

if(WITH_PYTHON)
  add_subdirectory(sympy)
endif()

#add_subdirectory(unsupported)


# Generating PKG file
# ===================

set(CODAC_PKG_CONFIG_FILE ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc)

set(CODAC_PKG_CONFIG_CFLAGS "-I\${includedir}/ibex -I\${includedir}/${PROJECT_NAME} -I\${includedir}/${PROJECT_NAME}-graphics")# -I\${includedir}/${PROJECT_NAME}-unsupported -I\${includedir}/codac")
set(CODAC_PKG_CONFIG_LIBS "-L\${libdir} -l${PROJECT_NAME}-core -l${PROJECT_NAME}-graphics")# -l${PROJECT_NAME}-unsupported -l${PROJECT_NAME}-core")

if(WITH_CAPD)
  set(CODAC_PKG_CONFIG_CFLAGS "${CODAC_PKG_CONFIG_CFLAGS} -I\${includedir}/${PROJECT_NAME}-capd")
  set(CODAC_PKG_CONFIG_LIBS "${CODAC_PKG_CONFIG_LIBS} -l${PROJECT_NAME}-capd")
endif()

set(CODAC_PKG_CONFIG_LIBS "${CODAC_PKG_CONFIG_LIBS} -l${PROJECT_NAME}-core") # Seems to be needed

file(GENERATE OUTPUT ${CODAC_PKG_CONFIG_FILE}
              CONTENT "  prefix=${CMAKE_INSTALL_PREFIX}
  includedir=\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}
  libdir=\${prefix}/${CMAKE_INSTALL_LIBDIR}

  Name: ${PROJECT_NAME}
  Description: ${PROJECT_DESCRIPTION}
  Url: ${PROJECT_HOMEPAGE_URL}
  Version: ${PROJECT_VERSION}
  Requires: ibex
  Cflags: ${CODAC_PKG_CONFIG_CFLAGS}
  Libs: ${CODAC_PKG_CONFIG_LIBS}
")

install(FILES ${CODAC_PKG_CONFIG_FILE} DESTINATION ${CMAKE_INSTALL_PKGCONFIG})


# Generating codac-config.cmake file
# ==================================

set(CODAC_CMAKE_CONFIG_FILE ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config.cmake)

file(WRITE ${CODAC_CMAKE_CONFIG_FILE}
           "  # Try to find Codac
  # This file has been generated by CMake

  find_path(CODAC_CORE_INCLUDE_DIR ${PROJECT_NAME}-core.h
            PATH_SUFFIXES include/${PROJECT_NAME}-core)
  find_path(CODAC_GRAPHICS_INCLUDE_DIR ${PROJECT_NAME}-graphics.h
            PATH_SUFFIXES include/${PROJECT_NAME}-graphics)
  #find_path(CODAC_UNSUPPORTED_INCLUDE_DIR ${PROJECT_NAME}-unsupported.h
  #          PATH_SUFFIXES include/${PROJECT_NAME}-unsupported)

  find_library(CODAC_CORE_LIBRARY NAMES ${PROJECT_NAME}-core
               PATH_SUFFIXES lib)
  find_library(CODAC_GRAPHICS_LIBRARY NAMES ${PROJECT_NAME}-graphics
               PATH_SUFFIXES lib)
  #find_library(CODAC_UNSUPPORTED_LIBRARY NAMES ${PROJECT_NAME}-unsupported
  #             PATH_SUFFIXES lib)

  set(CODAC_VERSION ${PROJECT_VERSION})
  set(CODAC_LIBRARIES \${CODAC_CORE_LIBRARY} \${CODAC_GRAPHICS_LIBRARY}) # \${CODAC_UNSUPPORTED_LIBRARY} \${CODAC_CORE_LIBRARY})
  set(CODAC_INCLUDE_DIRS \${CODAC_CORE_INCLUDE_DIR} \${CODAC_GRAPHICS_INCLUDE_DIR}) # \${CODAC_UNSUPPORTED_INCLUDE_DIR})

  set(CODAC_C_FLAGS \"\")
  set(CODAC_CXX_FLAGS \"\")
")

if(WITH_CAPD)

  file(APPEND ${CODAC_CMAKE_CONFIG_FILE} "

  # Optional 3rd party:

  find_path(CODAC_CAPD_INCLUDE_DIR ${PROJECT_NAME}-capd.h
            PATH_SUFFIXES include/${PROJECT_NAME}-capd)
  set(CODAC_INCLUDE_DIRS \${CODAC_INCLUDE_DIRS} \${CODAC_CAPD_INCLUDE_DIR})

  find_library(CODAC_CAPD_LIBRARY NAMES ${PROJECT_NAME}-capd
               PATH_SUFFIXES lib)
  set(CODAC_LIBRARIES \${CODAC_LIBRARIES} \${CODAC_CAPD_LIBRARY})
  ")

endif()

install(FILES ${CODAC_CMAKE_CONFIG_FILE} DESTINATION ${CMAKE_INSTALL_CMAKE})